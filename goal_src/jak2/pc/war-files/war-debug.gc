;;-*-Lisp-*-
(in-package goal)

;; name: war-debug.gc



(define dm-in? #f)
(define dm-select 0)
(define dm-slot 0)


#|all areas include:
ctyslumc
ctyslumb
ctysluma
ctyindb
ctyinda
ctyport
ctypal
ctygena
ctygenb
ctygenc
ctymarka
ctymarkb
ctyfarma
stadium
onintent
|#

(defun set-battle! ((arg0 string) (arg1 int)) ;set battles in specific areas of haven city. example (set-battle! "ctyslumc" 1) sets to complete battle in ctyslumc
    (when 
    (and
    (not (string= arg0 "ctyslumc"))
    (not (string= arg0 "ctyslumb"))
    (not (string= arg0 "ctysluma"))
    (not (string= arg0 "ctyindb"))
    (not (string= arg0 "ctyinda"))
    (not (string= arg0 "ctyport"))
    (not (string= arg0 "ctypal"))
    (not (string= arg0 "ctygena"))
    (not (string= arg0 "ctygenb"))
    (not (string= arg0 "ctygenc"))
    (not (string= arg0 "ctymarka"))
    (not (string= arg0 "ctymarkb"))
    (not (string= arg0 "ctyfarma"))
    (not (string= arg0 "ctyfarmb"))
    (not (string= arg0 "stadium"))
    (not (string= arg0 "onintent"))
    )
    (format #t "~%~%COMMAND ERROR - Cannot find specified area~%~%Settable Areas:~%ctyslumc~%ctyslumb~%ctysluma~%ctyindb~%ctyinda~%ctyport~%ctypal~%ctygenc~%ctygenb~%ctygena~%ctymarkb~%ctymarka~%ctyfarmb~%ctyfarma~%stadium~%onintent~%~%")
    )
    (when 
    (and
    (!= arg1 1)
    (!= arg1 0)
    )
    (format #t "~%~%COMMAND ERROR - Must set specified value, either:~%~%0=Start battle~%1=Complete battle~%~%")
    )


    (when (and (string= arg0 "ctyslumc")(= arg1 1)(= (/ (mod (-> *game-info* continue-deaths) 10) 1) 0)) ;ctyslumc off to on
        (+! (-> *game-info* continue-deaths) 1)
    )
    (when (and (string= arg0 "ctyslumc")(= arg1 0)(= (/ (mod (-> *game-info* continue-deaths) 10) 1) 1)) ;ctyslumc on to off
        (-! (-> *game-info* continue-deaths) 1)
    )
    (when (and (string= arg0 "ctyslumb")(= arg1 1)(= (/ (mod (-> *game-info* continue-deaths) 100) 10) 0)) ;ctyslumb off to on
        (+! (-> *game-info* continue-deaths) 10)
    )
    (when (and (string= arg0 "ctyslumb")(= arg1 0)(= (/ (mod (-> *game-info* continue-deaths) 100) 10) 1)) ;ctyslumb on to off
        (-! (-> *game-info* continue-deaths) 10)
    )
    (when (and (string= arg0 "ctysluma")(= arg1 1)(= (/ (mod (-> *game-info* continue-deaths) 1000) 100) 0)) ;ctysluma off to on
        (+! (-> *game-info* continue-deaths) 100)
    )
    (when (and (string= arg0 "ctysluma")(= arg1 0)(= (/ (mod (-> *game-info* continue-deaths) 1000) 100) 1)) ;ctysluma on to off
        (-! (-> *game-info* continue-deaths) 100)
    )
    (when (and (string= arg0 "ctyindb")(= arg1 1)(= (/ (mod (-> *game-info* continue-deaths) 10000) 1000) 0)) ;ctyindb off to on
        (+! (-> *game-info* continue-deaths) 1000)
    )
    (when (and (string= arg0 "ctyinb")(= arg1 0)(= (/ (mod (-> *game-info* continue-deaths) 10000) 1000) 1)) ;ctyindb on to off
        (-! (-> *game-info* continue-deaths) 1000)
    )
    (when (and (string= arg0 "ctyinda")(= arg1 1)(= (/ (mod (-> *game-info* continue-deaths) 100000) 10000) 0)) ;ctyinda off to on
        (+! (-> *game-info* continue-deaths) 10000)
    )
    (when (and (string= arg0 "ctyinda")(= arg1 0)(= (/ (mod (-> *game-info* continue-deaths) 100000) 10000) 1)) ;ctyinda on to off
        (-! (-> *game-info* continue-deaths) 10000)
    )
    (when (and (string= arg0 "ctyport")(= arg1 1)(= (/ (mod (-> *game-info* continue-deaths) 1000000) 100000) 0)) ;ctyport off to on
        (+! (-> *game-info* continue-deaths) 100000)
    )
    (when (and (string= arg0 "ctyport")(= arg1 0)(= (/ (mod (-> *game-info* continue-deaths) 1000000) 100000) 1)) ;ctyport on to off
        (-! (-> *game-info* continue-deaths) 100000)
    )
    (when (and (string= arg0 "ctyfarmb")(= arg1 1)(= (/ (mod (-> *game-info* continue-deaths) 10000000) 1000000) 0)) ;ctyfarmb off to on
        (+! (-> *game-info* continue-deaths) 1000000)
    )
    (when (and (string= arg0 "ctyfarmb")(= arg1 0)(= (/ (mod (-> *game-info* continue-deaths) 10000000) 1000000) 1)) ;ctyfarmb on to off
        (-! (-> *game-info* continue-deaths) 1000000)
    )
    (when (and (string= arg0 "ctymarka")(= arg1 1)(= (/ (mod (-> *game-info* continue-deaths) 100000000) 10000000) 0)) ;ctymarka off to on
        (+! (-> *game-info* continue-deaths) 10000000)
    )
    (when (and (string= arg0 "ctymarka")(= arg1 0)(= (/ (mod (-> *game-info* continue-deaths) 100000000) 10000000) 1)) ;ctymarka on to off
        (-! (-> *game-info* continue-deaths) 10000000)
    )
    (when (and (string= arg0 "ctyfarma")(= arg1 1)(= (/ (mod (-> *game-info* continue-deaths) 1000000000) 100000000) 0)) ;ctyfarma off to on
        (+! (-> *game-info* continue-deaths) 100000000)
    )
    (when (and (string= arg0 "ctyfarma")(= arg1 0)(= (/ (mod (-> *game-info* continue-deaths) 1000000000) 100000000) 1)) ;ctyfarma on to off
        (-! (-> *game-info* continue-deaths) 100000000)
    )
    (when (and (string= arg0 "ctypal")(= arg1 1)(= (/ (mod (-> *game-info* task-deaths) 10) 1) 0)) ;ctypal off to on
        (+! (-> *game-info* task-deaths) 1)
    )
    (when (and (string= arg0 "ctypal")(= arg1 0)(= (/ (mod (-> *game-info* task-deaths) 10) 1) 1)) ;ctypal on to off
        (-! (-> *game-info* task-deaths) 1)
    )
    (when (and (string= arg0 "ctygenc")(= arg1 1)(= (/ (mod (-> *game-info* task-deaths) 100) 10) 0)) ;ctygenc off to on
        (+! (-> *game-info* task-deaths) 10)
    )
    (when (and (string= arg0 "ctygenc")(= arg1 0)(= (/ (mod (-> *game-info* task-deaths) 100) 10) 1)) ;ctygenc on to off
        (-! (-> *game-info* task-deaths) 10)
    )
    (when (and (string= arg0 "ctygenb")(= arg1 1)(= (/ (mod (-> *game-info* task-deaths) 1000) 100) 0)) ;ctygenb off to on
        (+! (-> *game-info* task-deaths) 100)
    )
    (when (and (string= arg0 "ctygenb")(= arg1 0)(= (/ (mod (-> *game-info* task-deaths) 1000) 100) 1)) ;ctygenb on to off
        (-! (-> *game-info* task-deaths) 100)
    )
    (when (and (string= arg0 "ctygena")(= arg1 1)(= (/ (mod (-> *game-info* task-deaths) 10000) 1000) 0)) ;ctygena off to on
        (+! (-> *game-info* task-deaths) 1000)
    )
    (when (and (string= arg0 "ctygena")(= arg1 0)(= (/ (mod (-> *game-info* task-deaths) 10000) 1000) 1)) ;ctygena on to off
        (-! (-> *game-info* task-deaths) 1000)
    )
    (when (and (string= arg0 "ctygena")(= arg1 1)(= (/ (mod (-> *game-info* task-deaths) 10000) 1000) 0)) ;ctygena off to on
        (+! (-> *game-info* task-deaths) 1000)
    )
    (when (and (string= arg0 "ctygena")(= arg1 0)(= (/ (mod (-> *game-info* task-deaths) 10000) 1000) 1)) ;ctygena on to off
        (-! (-> *game-info* task-deaths) 1000)
    )
    (when (and (string= arg0 "stadium")(= arg1 1)(= (/ (mod (-> *game-info* task-deaths) 100000) 10000) 0)) ;stadium off to on
        (+! (-> *game-info* task-deaths) 10000)
    )
    (when (and (string= arg0 "stadium")(= arg1 0)(= (/ (mod (-> *game-info* task-deaths) 100000) 10000) 1)) ;stadium on to off
        (-! (-> *game-info* task-deaths) 10000)
    )
    (when (and (string= arg0 "ctymarkb")(= arg1 1)(= (/ (mod (-> *game-info* task-deaths) 1000000) 100000) 0)) ;ctymarkb off to on
        (+! (-> *game-info* task-deaths) 100000)
    )
    (when (and (string= arg0 "ctymarkb")(= arg1 0)(= (/ (mod (-> *game-info* task-deaths) 1000000) 100000) 1)) ;ctymarkb on to off
        (-! (-> *game-info* task-deaths) 100000)
    )
    (when (and (string= arg0 "onintent")(= arg1 1)(= (/ (mod (-> *game-info* task-deaths) 10000000) 1000000) 0)) ;onintent off to on
        (+! (-> *game-info* task-deaths) 1000000)
    )
    (when (and (string= arg0 "onintent")(= arg1 0)(= (/ (mod (-> *game-info* task-deaths) 10000000) 1000000) 1)) ;onintent on to off
        (-! (-> *game-info* task-deaths) 1000000)
    )

    (none)
)

(defun jak-level! ((arg0 string) (arg1 int)) ;Set any of Jak's levels to whatever. Example: (jak-level! "notoriety" 3)
(when 
    (and
    (not (string= arg0 "notoriety"))
    (not (string= arg0 "scattergun"))
    (not (string= arg0 "blaster"))
    (not (string= arg0 "vulcan"))
    (not (string= arg0 "peacemaker"))
    (not (string= arg0 "melee"))
    )
    (format #t "~%~%COMMAND ERROR - Level counter not found~%~%these are the current settable levels:~%notoritey~%scattergun~%blaster~%vulcan~%peacemaker~%melee~%~%")
    )
    (when 
    (or
    (> arg1 30)
    (<= arg1 0)
    )
    (format #t "~%~%COMMAND ERROR - Must be in between 1-30 for all levels.~%~%")
    )
)

(defun jak-give! ((arg0 int) (arg1 int)) ;Give an item to jak with an item ID, then set item rarity


)

(defun dm-track-update ()
    (when *debug-segment*
      (clear matt-str)
      (clear *pc-encoded-matt-str*)
      (format matt-str "<COLOR_GREEN>continue-deaths (war-tracker!) = <COLOR_ORANGE>~d~%<COLOR_GREEN>task-deaths (war-tracker!) = <COLOR_ORANGE>~d~%<COLOR_RED>karma <COLOR_GREEN>= <COLOR_ORANGE>~f"
      (-> *game-info* continue-deaths)
      (-> *game-info* task-deaths)
      (-> *game-info* karma)
      )
      (pc-encode-utf8-string matt-str *pc-encoded-matt-str*)
      (with-dma-buffer-add-bucket ((buf (-> (current-frame) global-buf)) (bucket-id debug-no-zbuf1))
        (dma-buffer-add-gs-set-flusha buf (alpha-1 (new 'static 'gs-alpha :b #x1 :d #x1)) (tex1-1 (new 'static 'gs-tex1 :mmag #x1 :mmin #x1)))
        (let ((font-ctx (new 'stack 'font-context *font-default-matrix* 510 1 0.0 (font-color default) (font-flags right shadow kerning large))))
          (set! (-> font-ctx scale) 0.325)
          (draw-string-adv *pc-encoded-matt-str* buf font-ctx)))
    )
(none)
)